{"version":3,"sources":["components/Movie.js","router/Home.js","router/About.js","components/Navigation.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","Home","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","About","Navigation","to","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAmCeA,MA/Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAEV,aADA,CACA,MAAgBL,UAAU,gBAA1B,SACGI,GADMC,QAKb,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBCqCOC,G,kNAlDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,yEANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IARzB,2C,uDAWZ,WACEQ,KAAKN,c,oBAGP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACE,yBAASV,UAAU,YAAnB,SACE,8BACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAACe,GAAD,OACV,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QANTmB,EAAMC,iB,GAlCVE,IAAMC,Y,MCUVC,MAZf,WACE,OACE,sBAAKvB,UAAU,mBAAf,UACE,qGAC8D,uBAD9D,iDAIA,kE,MCKSwB,MAXf,WACE,OACE,gCAGE,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCYSC,MAff,WACE,OAIE,cAHA,CAGC,IAAD,WAGE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWtB,IACxC,cAAC,IAAD,CAAOoB,KAAK,SAASE,UAAWN,QCbtCO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,a","file":"static/js/main.6141ad1d.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({ year, title, summary, poster, genres }) {\n  return (\n    <div className=\"movie\">\n      <img src={poster} alt={title} title={title} />\n      <div className=\"movie__data\">\n        <h3 className=\"movie__title\">{title}</h3>\n        <h5 className=\"movie__year\">{year}</h5>\n        <ul className=\"movie__genres\">\n          {genres.map((genre, index) => (\n            //   map에  key 추가하기\n            <li key={index} className=\"genres__genre\">\n              {genre}\n            </li>\n          ))}\n        </ul>\n        <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n      </div>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  //   genres array Proptypes 추가\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\"\n    );\n    this.setState({ movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        <div>\n          {isLoading ? (\n            <div className=\"loader\">\n              <span className=\"loader__text\">Loading...</span>\n            </div>\n          ) : (\n            <div className=\"movies\">\n              {movies.map((movie) => (\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./About.css\";\n\nfunction About() {\n  return (\n    <div className=\"about__container\">\n      <span>\n        “Freedom is the freedom to say that two plus two make four. <br />\n        If that is granted, all else follows.”\n      </span>\n      <span>− George Orwell, 1984</span>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\n// Link import -> 리액트를 죽이는 html아님\nimport { Link } from \"react-router-dom\";\n\nfunction Navigation() {\n  return (\n    <div>\n      {/* Home 클릭시 다시 새로고침 후 재로딩됨 \n      -> html 이기 때문, html 은 페이지를 재로딩함*/}\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/about\">About</Link>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nimport Home from \"./router/Home\";\nimport About from \"./router/About\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\n\nfunction App() {\n  return (\n    // HashRouter와 BrowserRouter의 차이점 -> HashRouter는 주소창에  /#/ 가 있음\n    //HashRouter가 github page에 사용하기 용이함\n\n    <BrowserRouter>\n      {/*  Link는 Router 밖에서 쓸 수 없음 \n      ex) <footer> 같은 경우 router 밖에서 쓸 수 있음 , 물론 Fragment 필요함 */}\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"potato\")\n);\n"],"sourceRoot":""}